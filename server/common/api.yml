openapi: 3.0.1
info:
  title: Users Hierarchy
  description: Small application that return hierarchy based in users and roles
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: User Roles
    description: Endpoint that receive plays with user role hierarchies
  - name: Specification
    description: The swagger API specification
paths:
  /hierarchy/roles:
    post:
      tags:
        - hierarchy
      description: Create new roles
      requestBody:
        description: Post new roles
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Role'
            example:
              - Id: 1
                Name: System Administrator
                Parent: 0
              - Id: 2
                Name: Location Manager
                Parent: 1
        required: true
      responses:
        200:
          description: Roles Created
        400:
          description: Error happend
  /hierarchy/users:
    post:
      tags:
        - hierarchy
      description: Create new users
      requestBody:
        description: Post new users
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
            example:
              - Id: 1
                Name: Rick Sanchez
                Role: 0
              - Id: 2
                Name: Morty Smith
                Role: 1
        required: true
      responses:
        200:
          description: Users Created
        400:
          description: Error happend

  /hierarchy/{id}:
    get:
      tags:
        - hierarchy
      description: getSubOrdinates
      parameters:
        - name: id
          in: path
          description: The id of the user to retrieve
          required: true
          schema:
            type: number
      responses:
        200:
          description: Return the subordinades
        400:
          description: Error happend
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: User not found
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    Role:
      title: role
      required:
        - Id
        - Name
        - Parent
      type: object
      properties:
        Id:
          type: number
          example: 1
        Name:
          type: string
          example: Genius
        Parent:
          type: number
          example: 0
    User:
      title: user
      required:
        - Id
        - Name
        - Role
      type: object
      properties:
        Id:
          type: number
          example: 1
        Name:
          type: string
          example: Rick Sanchez
        Role:
          type: number
          example: 1
